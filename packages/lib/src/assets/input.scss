/* stylelint-disable no-descending-specificity */
.md-input {
  flex-grow: 0;
  display: inline-flex;
  align-items: center;
  align-self: center;
  width: max-content;
  position: relative;
  transition: box-shadow 0.2s;
  min-height: var(--component-lg);
  color: var(--on-surface-variant);
  margin-block: var(--xs);

  &-content,
  input {
    flex: 1 1 auto;
  }

  &.span {
    min-width: initial;
    width: 100%;
  }

  input {
    border: none;
    outline: none;
    background: none;
    height: 100%;
    width: 100%;
    min-height: inherit;
    margin-left: -2px;
    color: inherit;
    font: inherit;

    &:focus {
      color: var(--on-surface);
    }
  }

  &:focus-within [data-placeholder]::after {
    color: var(--primary);
  }

  &.outlined {
    border-radius: var(--xxs);
    box-shadow: 0 0 0 1px inset var(--outline);

    &:focus-within {
      box-shadow: 0 0 0 2px inset var(--primary);
    }

    [data-placeholder]::after {
      top: 0;
      transform: translate(0, -45%);
      padding-inline: var(--xxs);
      margin-left: calc(var(--xxs) * -1);
      font-size: var(--font-sm);
      background: var(--surface);
    }

    &:has(.md-input-icon.left) [data-placeholder]::after {
      transform: translate(calc(var(--icon-xxl) * -1), -45%);
    }
  }

  &-content {
    position: relative;
    height: 100%;
    width: 100%;
    display: flex;
    min-height: inherit;
    padding-inline: var(--md);
    font-size: var(--font-lg);

    &:has(span) {
      gap: var(--xs);
    }

    span {
      align-items: center;
      display: inline-flex;
    }

    &[data-placeholder]::after {
      content: attr(data-placeholder);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      position: absolute;
      max-width: calc(100% - var(--md));
      left: var(--md);
      transition:
        top 0.2s,
        color 0.2s,
        font-size 0.2s,
        transform 0.2s;
    }

    &:has(input:placeholder-shown):not(:focus-within) {
      span {
        opacity: 0;
      }

      &[data-placeholder]::after {
        color: currentcolor;
        font-size: var(--font-lg);
        transform: none !important;
        top: calc(var(--component-lg) * 0.3);
      }
    }
  }

  &.filled {
    border-radius: var(--xxs) var(--xxs) 0 0;
    background: var(--surface-container-highest);

    &::before,
    &::after {
      content: '';
      bottom: 0;
      position: absolute;
      background: var(--on-surface-variant);
      pointer-events: none;
      height: 1px;
      width: 100%;
    }

    &::after {
      scale: 0 1;
      transition:
        background-color 0.2s,
        scale 0.2s;
      height: 2px;
    }

    &:focus-within {
      &::after {
        scale: 1 1;
        background: var(--primary);
      }
    }

    [data-placeholder] {
      input,
      span {
        padding-top: var(--sm);
      }

      &::after {
        font-size: var(--font-sm);
        top: var(--xxs);
      }
    }
  }

  &-icon {
    display: inherit;
    align-items: center;

    &:first-child {
      padding-left: var(--sm);
    }

    &:last-child {
      padding-right: var(--sm);
    }
  }

  &-counter {
    color: #7779;
    position: absolute;
    inset: auto 4px 2px auto;
    font-size: var(--font-xs);
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }

  &-number-arrows {
    display: grid;
    grid-template-rows: 1fr 1fr;
    place-items: center;
    line-height: 0;
    height: 100%;
    position: absolute;
    right: 0;
    user-select: none;

    > * {
      height: 100%;
      display: grid;
      width: var(--xl);
      place-items: center;
      cursor: pointer;
    }

    :first-child {
      align-items: end;
    }

    :last-child {
      align-items: start;
    }
  }
}
